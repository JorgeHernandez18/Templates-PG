# compose.yaml - Laravel stack
name: laravel-stack

x-logging: &logging
  driver: "json-file"
  options: { max-size: "10m", max-file: "3" }

x-wait-mysql: &wait-mysql
  test: ["CMD-SHELL", "mysqladmin ping -h localhost -u $$MYSQL_USER -p$$MYSQL_PASSWORD --silent"]
  interval: 10s
  timeout: 5s
  retries: 6
  start_period: 20s

x-wait-redis: &wait-redis
  test: ["CMD", "redis-cli","ping"]
  interval: 10s
  timeout: 3s
  retries: 6
  start_period: 10s

services:
  app:                 # PHP-FPM
    build:
      context: .
      dockerfile: ./ops/php-fpm.Dockerfile   # PHP 8.2 + ext comunes (pdo_mysql, redis, gd, opcache)
    container_name: laravel-app
    user: "1000:1000"                        # rootless-friendly
    volumes:
      - ./:/var/www/html
      - laravel_vendor:/var/www/html/vendor
      - laravel_cache:/var/www/html/storage
    env_file: .env
    depends_on:
      - mysql
      - redis
    restart: unless-stopped
    logging: *logging
    networks: [ backend ]

  web:                 # Nginx
    image: nginx:alpine
    container_name: laravel-web
    ports:
      - "8081:80"
    volumes:
      - ./:/var/www/html:ro
      - ./ops/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 20s
    restart: unless-stopped
    logging: *logging
    networks: [ backend ]

  mysql:
    image: mysql:8.0
    container_name: laravel-mysql
    command: ["--default-authentication-plugin=mysql_native_password", "--innodb-buffer-pool-size=256M"]
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-laravel}
      MYSQL_USER: ${DB_USERNAME:-laravel}
      MYSQL_PASSWORD: ${DB_PASSWORD:-secret}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root}
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck: *wait-mysql
    restart: unless-stopped
    logging: *logging
    networks: [ backend ]

  redis:
    image: redis:7-alpine
    container_name: laravel-redis
    command: ["redis-server","--appendonly","yes"]
    volumes:
      - redis_data:/data
    healthcheck: *wait-redis
    restart: unless-stopped
    logging: *logging
    networks: [ backend ]

  queue:
    build:
      context: .
      dockerfile: ./ops/php-fpm.Dockerfile
    container_name: laravel-queue
    command: ["php","artisan","queue:work","--verbose","--tries=3","--sleep=1"]
    user: "1000:1000"
    env_file: .env
    volumes:
      - ./:/var/www/html
      - laravel_vendor:/var/www/html/vendor
      - laravel_cache:/var/www/html/storage
    depends_on:
      - redis
      - mysql
    restart: unless-stopped
    logging: *logging
    networks: [ backend ]

  scheduler:
    build:
      context: .
      dockerfile: ./ops/php-fpm.Dockerfile
    container_name: laravel-scheduler
    command: ["sh","-lc","while :; do php artisan schedule:run --verbose --no-interaction; sleep 60; done"]
    user: "1000:1000"
    env_file: .env
    volumes:
      - ./:/var/www/html
      - laravel_vendor:/var/www/html/vendor
      - laravel_cache:/var/www/html/storage
    depends_on:
      - mysql
      - redis
    restart: unless-stopped
    logging: *logging
    networks: [ backend ]

networks:
  backend:

volumes:
  mysql_data:
  redis_data:
  laravel_vendor:
  laravel_cache:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${HOME}/.laravel_cache   # cambiar si se desea otra ruta para cache persistente